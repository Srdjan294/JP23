/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edunova.jp23.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import edunova.jp23.controller.ObradaGrupa;
import edunova.jp23.controller.ObradaPolaznik;
import edunova.jp23.controller.ObradaPredavac;
import edunova.jp23.controller.ObradaSmjer;
import edunova.jp23.model.Grupa;
import edunova.jp23.model.Polaznik;
import edunova.jp23.model.Predavac;
import edunova.jp23.model.Smjer;
import edunova.jp23.util.EdunovaException;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author srdja
 */
public class GrupaForma extends javax.swing.JFrame {

    private ObradaGrupa obrada;
    private ObradaPolaznik obradaPolaznik;
    
    /**
     * Creates new form GrupaForma
     */
    public GrupaForma() {
        initComponents();
        obrada = new ObradaGrupa();
        obradaPolaznik = new ObradaPolaznik();
        setTitle(Aplikacija.NASLOV_APP + " Grupe");
        ucitajEntitete();
        ucitajSmjerove();
        ucitajPredavace();
        prilagodiDpDatumPocetka();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbSmjerovi = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbPredavaci = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstPolazniciNaGrupi = new javax.swing.JList<>();
        dpDatumPocetka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        slBrojPolaznika = new javax.swing.JSlider();
        lblPolaznika = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstPolazniciUSkoli = new javax.swing.JList<>();
        txtUvjet = new javax.swing.JTextField();
        btnTrazi = new javax.swing.JButton();
        btnDodajUGrupu = new javax.swing.JButton();
        btnObrisiIzGrupe = new javax.swing.JButton();
        btnBrisanje = new javax.swing.JButton();
        btnPromjena = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstEntiteti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jLabel1.setText("Naziv");

        jLabel2.setText("Smjer");

        jLabel3.setText("Predavač");

        jScrollPane2.setViewportView(lstPolazniciNaGrupi);

        jLabel4.setText("Datum početka");

        jLabel5.setText("Maksimalno polaznika: ");

        slBrojPolaznika.setMaximum(25);
        slBrojPolaznika.setMinimum(1);
        slBrojPolaznika.setValue(12);
        slBrojPolaznika.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                slBrojPolaznikaStateChanged(evt);
            }
        });

        jScrollPane3.setViewportView(lstPolazniciUSkoli);

        btnTrazi.setText("Traži");
        btnTrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziActionPerformed(evt);
            }
        });

        btnDodajUGrupu.setText("<<");
        btnDodajUGrupu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajUGrupuActionPerformed(evt);
            }
        });

        btnObrisiIzGrupe.setText(">>");
        btnObrisiIzGrupe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiIzGrupeActionPerformed(evt);
            }
        });

        btnBrisanje.setText("Brisanje");
        btnBrisanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrisanjeActionPerformed(evt);
            }
        });

        btnPromjena.setText("Promjena");
        btnPromjena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjenaActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(txtNaziv)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(cmbPredavaci, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cmbSmjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(lblPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(slBrojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnDodaj)
                                    .addComponent(btnPromjena)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(10, 10, 10)
                                        .addComponent(btnBrisanje))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDodajUGrupu)
                            .addComponent(btnObrisiIzGrupe))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnTrazi)))))
                .addGap(59, 59, 59))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbSmjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPredavaci, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTrazi))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(btnDodajUGrupu)
                                .addGap(36, 36, 36)
                                .addComponent(btnObrisiIzGrupe))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(btnPromjena))))
                            .addComponent(btnDodaj))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBrisanje)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slBrojPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        if (lstEntiteti.getSelectedValue() == null) {
            return;
        }

        obrada.setEntitet(lstEntiteti.getSelectedValue());

        var g = obrada.getEntitet();
        //nema potrebe za sljedećom linijom, piše se kao iznad
        //Grupa g = obrada.getEntitet();
        
        txtNaziv.setText(g.getNaziv());
        
        //Ukoliko imate dvije identične instance
        //ovo neće proći
        cmbSmjerovi.setSelectedItem(g.getSmjer());
        
        
        //cmbPredavaci.setSelectedItem(g.getPredavac());
        DefaultComboBoxModel<Predavac> mp = 
                (DefaultComboBoxModel<Predavac>) cmbPredavaci.getModel();
        for(int i=0; i<mp.getSize(); i++){
            if(mp.getElementAt(i).getId().equals(g.getId())){
                cmbPredavaci.setSelectedIndex(i);
                break;
            }
        }
        
        if(g.getDatumPocetka() != null){
            dpDatumPocetka.setDate(g.getDatumPocetka().toInstant()
            .atZone(ZoneId.systemDefault()).toLocalDate());
        }else{
            dpDatumPocetka.setDate(null);
        }
        
        if(g.getBrojPolaznika()!=null){
            slBrojPolaznika.setValue(g.getBrojPolaznika());
        }else{
            slBrojPolaznika.setValue(0);
        }
        
        DefaultListModel<Polaznik> m = new DefaultListModel<>();
        m.addAll(g.getPolaznici());
        lstPolazniciNaGrupi.setModel(m);
    }//GEN-LAST:event_lstEntitetiValueChanged

    private void slBrojPolaznikaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_slBrojPolaznikaStateChanged
        lblPolaznika.setText(String.valueOf(slBrojPolaznika.getValue()));
    }//GEN-LAST:event_slBrojPolaznikaStateChanged

    private void btnTraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziActionPerformed
        
        DefaultListModel<Polaznik> m = new DefaultListModel<>();
        m.addAll(obradaPolaznik.getPodaci(txtUvjet.getText()));
        lstPolazniciUSkoli.setModel(m);
    }//GEN-LAST:event_btnTraziActionPerformed

    private void btnDodajUGrupuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajUGrupuActionPerformed
        DefaultListModel<Polaznik> m;
        try {
           m = (DefaultListModel<Polaznik>) lstPolazniciNaGrupi.getModel();
           m.get(0).toString();
        } catch (Exception e) {
            m = new DefaultListModel<>();
            lstPolazniciNaGrupi.setModel(m);
        }
        
        boolean postoji;
        
        for(Polaznik p : lstPolazniciUSkoli.getSelectedValuesList()){
            postoji = false;
            for(int i = 0; i < m.size(); i++){
                if(p.getId().equals(m.get(i).getId())){
                    postoji = true;
                    break;
                }
            }
            if(!postoji){
                m.addElement(p);
            }
            
        }
        
        lstPolazniciNaGrupi.repaint();
    }//GEN-LAST:event_btnDodajUGrupuActionPerformed

    private void btnObrisiIzGrupeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiIzGrupeActionPerformed
        DefaultListModel<Polaznik> m;
        try {
           m = (DefaultListModel<Polaznik>) lstPolazniciNaGrupi.getModel();
           m.get(0).toString();
        } catch (Exception e) {
            return;
        }
        
        for(Polaznik p : lstPolazniciNaGrupi.getSelectedValuesList()){
            
            for(int i = 0; i < m.size(); i++){
                if(p.getId().equals(m.get(i).getId())){
                    m.removeElementAt(i);
                    break;
                }
            } 
        }
    }//GEN-LAST:event_btnObrisiIzGrupeActionPerformed

    private void btnPromjenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjenaActionPerformed
       if (obrada.getEntitet() == null || obrada.getEntitet().getId() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite stavku");
            return;
        }
        postaviVrijednostiNaEntitet();

        try {
            obrada.update();
            pocisti();
            ucitajEntitete();
        } catch (EdunovaException e) {
            JOptionPane.showMessageDialog(rootPane, e.getPoruka());
        }
    }//GEN-LAST:event_btnPromjenaActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        obrada.setEntitet(new Grupa());
        
        postaviVrijednostiNaEntitet();

        try {
            obrada.create();
            pocisti();
            ucitajEntitete(); // nije optimizirano. Bolje bi bilo samo taj novi dodati u listu
        } catch (EdunovaException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getPoruka());
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnBrisanjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrisanjeActionPerformed
        if (obrada.getEntitet() == null || obrada.getEntitet().getId() == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite stavku");
            return;
        }
        postaviVrijednostiNaEntitet();

        try {
            obrada.delete();
            pocisti();
            ucitajEntitete();
        } catch (EdunovaException e) {
            JOptionPane.showMessageDialog(rootPane, e.getPoruka());
        }
    }//GEN-LAST:event_btnBrisanjeActionPerformed

    private void ucitajEntitete() {
        
        DefaultListModel<Grupa> m = new DefaultListModel<>();

        //m.addAll(obrada.getPodaci());
        System.out.println("Smjerovi na grupama");
        obrada.getPodaci().forEach(xxxx -> {
            m.addElement(xxxx);
            System.out.println(xxxx.getSmjer().getNaziv()+": "+xxxx.getSmjer().hashCode());
        });

        lstEntiteti.setModel(m);
       
    }
    
    private void ucitajSmjerove() {
        
        DefaultComboBoxModel<Smjer> m = new DefaultComboBoxModel<>();
        
        Smjer s = new Smjer();
        s.setId(-1L);
        s.setNaziv("Odaberite smjer");
        m.addElement(s);
        System.out.println("Smjerovi u CMB");
        new ObradaSmjer().getPodaci().forEach(sm -> {
            m.addElement(sm);
            System.out.println(sm.getNaziv() + ": " + sm.hashCode());
        });
       
        cmbSmjerovi.setModel(m);
        cmbSmjerovi.setSelectedIndex(0);
    }
    
    private void ucitajPredavace() {
        
        DefaultComboBoxModel<Predavac> m = new DefaultComboBoxModel<>();
        
        
        m.addAll(new ObradaPredavac().getPodaci());
       
        cmbPredavaci.setModel(m);
        cmbPredavaci.setSelectedIndex(0);
    }

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBrisanje;
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajUGrupu;
    private javax.swing.JButton btnObrisiIzGrupe;
    private javax.swing.JButton btnPromjena;
    private javax.swing.JButton btnTrazi;
    private javax.swing.JComboBox<Predavac> cmbPredavaci;
    private javax.swing.JComboBox<Smjer> cmbSmjerovi;
    private com.github.lgooddatepicker.components.DatePicker dpDatumPocetka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblPolaznika;
    private javax.swing.JList<Grupa> lstEntiteti;
    private javax.swing.JList<Polaznik> lstPolazniciNaGrupi;
    private javax.swing.JList<Polaznik> lstPolazniciUSkoli;
    private javax.swing.JSlider slBrojPolaznika;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void prilagodiDpDatumPocetka() {
        
        DatePickerSettings dps = new DatePickerSettings(new Locale("hr","HR"));
        dps.setFormatForDatesCommonEra("dd.MM.yyyy");
        dpDatumPocetka.setSettings(dps);
    }

    private void postaviVrijednostiNaEntitet() {
        var g = obrada.getEntitet();
        g.setNaziv(txtNaziv.getText());
        g.setPredavac((Predavac) cmbPredavaci.getSelectedItem());
        g.setSmjer((Smjer) cmbSmjerovi.getSelectedItem());
        g.setBrojPolaznika(slBrojPolaznika.getValue());
        if(dpDatumPocetka.getDate() != null){
            g.setDatumPocetka(
                    Date.from(dpDatumPocetka.getDate()
                                .atStartOfDay()
                        .atZone(ZoneId.systemDefault()).toInstant())
            );
        }
        
        DefaultListModel<Polaznik> m;
        try {
           m = (DefaultListModel<Polaznik>) lstPolazniciNaGrupi.getModel();
           g.setPolaznici(new ArrayList<>());
           for(int i = 0; i < m.getSize(); i++){
               g.getPolaznici().add(m.get(i));
           }
        } catch (Exception e) {
            
        }
    }

    private void pocisti() {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

   
}
